import { forwardRef } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Progress } from '@/components/ui/progress';
import { Label } from '@/components/ui/label';
import { Badge } from '@/components/ui/badge';
import { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, AreaChart, Area } from 'recharts';
import { CheckCircle, TrendingUp, Activity } from 'lucide-react';
import { motion } from 'framer-motion';

// Dummy Data for Performance Comparisons
const employeeData = {
  tasksOverTime: [
    { date: '2025-09-01', completed: 5, inProgress: 3, pending: 2 },
    { date: '2025-09-08', completed: 7, inProgress: 2, pending: 1 },
    { date: '2025-09-15', completed: 8, inProgress: 2, pending: 1 },
  ],
  comparisons: [
    { category: 'Tasks', you: 13, average: 10 },
    { category: 'Subtasks', you: 25, average: 20 },
    { category: 'Efficiency', you: 80, average: 70 },
  ],
  performance: {
    completionRate: 80,
    tasksCompleted: 13,
    subtasksCompleted: 25,
  },
};

// Colors
const COLORS = {
  completed: '#22c55e',
  inProgress: '#facc15',
  pending: '#ef4444',
  you: '#3b82f6',
  average: '#9ca3af',
};

const Performance = forwardRef(({ dateRange, isPrintMode }, ref) => {
  if (isPrintMode) {
    return (
      <div ref={ref} className="p-6 bg-white text-gray-900 font-sans">
        <header className="text-center mb-6 border-b pb-2">
          <h1 className="text-2xl font-bold">Performance Report</h1>
          <p className="text-sm">Generated on September 15, 2025 | Date Range: {dateRange}</p>
        </header>
        <section className="mb-4">
          <h2 className="text-lg font-semibold mb-2">Key Metrics</h2>
          <div className="grid grid-cols-3 gap-2 text-sm">
            <div>Completion Rate: {employeeData.performance.completionRate}%</div>
            <div>Tasks Completed: {employeeData.performance.tasksCompleted}</div>
            <div>Subtasks Completed: {employeeData.performance.subtasksCompleted}</div>
          </div>
        </section>
        <section className="mb-4">
          <h2 className="text-lg font-semibold mb-2">Progress Comparisons</h2>
          <table className="w-full text-sm border-collapse">
            <thead>
              <tr className="border-b">
                <th className="text-left p-1">Category</th>
                <th className="text-left p-1">You</th>
                <th className="text-left p-1">Team Average</th>
              </tr>
            </thead>
            <tbody>
              {employeeData.comparisons.map(comp => (
                <tr key={comp.category} className="border-b">
                  <td className="p-1">{comp.category}</td>
                  <td className="p-1">{comp.you}{comp.category === 'Efficiency' ? '%' : ''}</td>
                  <td className="p-1">{comp.average}{comp.category === 'Efficiency' ? '%' : ''}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </section>
        <section className="mb-4">
          <h2 className="text-lg font-semibold mb-2">Task Trends</h2>
          <div className="text-sm">
            <div>Latest Completed: {employeeData.tasksOverTime[employeeData.tasksOverTime.length - 1].completed}</div>
            <div>Latest In Progress: {employeeData.tasksOverTime[employeeData.tasksOverTime.length - 1].inProgress}</div>
            <div>Latest Pending: {employeeData.tasksOverTime[employeeData.tasksOverTime.length - 1].pending}</div>
          </div>
        </section>
        <footer className="text-center mt-6 text-sm border-t pt-2">
          <p>Confidential - For Internal Use Only</p>
          <p>Generated by DevOps IT Management System</p>
        </footer>
      </div>
    );
  }

  return (
    <motion.div
      ref={ref}
      className="space-y-6"
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 0.5 }}
    >
      <div className="grid grid-cols-1 sm:grid-cols-3 gap-4">
        <Card className="shadow-md hover:shadow-lg transition-shadow duration-300 bg-white dark:bg-gray-800">
          <CardHeader className="flex items-center gap-2">
            <CheckCircle className="h-5 w-5 text-green-500" />
            <CardTitle className="text-base">Completion Rate</CardTitle>
          </CardHeader>
          <CardContent>
            <Label className="text-sm text-gray-600 dark:text-gray-400">Your Progress</Label>
            <p className="text-xl font-bold text-gray-800 dark:text-gray-100">{employeeData.performance.completionRate}%</p>
            <Progress value={employeeData.performance.completionRate} className="mt-2 h-2" />
            <Badge variant="success" className="mt-2">Above Average</Badge>
          </CardContent>
        </Card>
        <Card className="shadow-md hover:shadow-lg transition-shadow duration-300 bg-white dark:bg-gray-800">
          <CardHeader className="flex items-center gap-2">
            <Activity className="h-5 w-5 text-blue-500" />
            <CardTitle className="text-base">Tasks Completed</CardTitle>
          </CardHeader>
          <CardContent>
            <Label className="text-sm text-gray-600 dark:text-gray-400">Total</Label>
            <p className="text-xl font-bold text-gray-800 dark:text-gray-100">{employeeData.performance.tasksCompleted}</p>
            <Badge variant="secondary" className="mt-2">On Track</Badge>
          </CardContent>
        </Card>
        <Card className="shadow-md hover:shadow-lg transition-shadow duration-300 bg-white dark:bg-gray-800">
          <CardHeader className="flex items-center gap-2">
            <Activity className="h-5 w-5 text-purple-500" />
            <CardTitle className="text-base">Subtasks Completed</CardTitle>
          </CardHeader>
          <CardContent>
            <Label className="text-sm text-gray-600 dark:text-gray-400">Total</Label>
            <p className="text-xl font-bold text-gray-800 dark:text-gray-100">{employeeData.performance.subtasksCompleted}</p>
            <Badge variant="success" className="mt-2">Excellent</Badge>
          </CardContent>
        </Card>
      </div>

      <Card className="shadow-md hover:shadow-lg transition-shadow duration-300 bg-white dark:bg-gray-800">
        <CardHeader className="flex items-center gap-2">
          <TrendingUp className="h-5 w-5 text-indigo-500" />
          <CardTitle className="text-base">Progress Comparisons</CardTitle>
        </CardHeader>
        <CardContent>
          <ResponsiveContainer width="100%" height={200}>
            <BarChart data={employeeData.comparisons}>
              <XAxis dataKey="category" tick={{ fill: '#6b7280' }} />
              <YAxis tick={{ fill: '#6b7280' }} />
              <Tooltip contentStyle={{ backgroundColor: '#fff', borderRadius: '8px' }} />
              <Bar dataKey="you" fill={COLORS.you} name="You" radius={[4, 4, 0, 0]} barSize={40} />
              <Bar dataKey="average" fill={COLORS.average} name="Team Average" radius={[4, 4, 0, 0]} barSize={40} />
            </BarChart>
          </ResponsiveContainer>
        </CardContent>
      </Card>

      <Card className="shadow-md hover:shadow-lg transition-shadow duration-300 bg-white dark:bg-gray-800">
        <CardHeader className="flex items-center gap-2">
          <Activity className="h-5 w-5 text-orange-500" />
          <CardTitle className="text-base">Task Trends</CardTitle>
        </CardHeader>
        <CardContent>
          <ResponsiveContainer width="100%" height={200}>
            <AreaChart data={employeeData.tasksOverTime}>
              <XAxis dataKey="date" tick={{ fill: '#6b7280' }} />
              <YAxis tick={{ fill: '#6b7280' }} />
              <Tooltip contentStyle={{ backgroundColor: '#fff', borderRadius: '8px' }} />
              <Area type="monotone" dataKey="completed" stackId="1" fill={COLORS.completed} stroke={COLORS.completed} fillOpacity={0.6} />
              <Area type="monotone" dataKey="inProgress" stackId="1" fill={COLORS.inProgress} stroke={COLORS.inProgress} fillOpacity={0.6} />
              <Area type="monotone" dataKey="pending" stackId="1" fill={COLORS.pending} stroke={COLORS.pending} fillOpacity={0.6} />
            </AreaChart>
          </ResponsiveContainer>
        </CardContent>
      </Card>
    </motion.div>
  );
});

Performance.displayName = 'Performance';

export default Performance;